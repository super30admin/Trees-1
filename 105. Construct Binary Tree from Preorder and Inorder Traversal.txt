class Solution:
    ind=0
    d={}
    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:
        
        def helper(preorder,inorder,start,end):
            if (start>end):
                return None
            rv=preorder[self.ind]
            self.ind=self.ind+1
            root=TreeNode(rv)
            rind=self.d[rv]
            root.left=helper(preorder,inorder,start,rind-1)
            root.right=helper(preorder,inorder,rind+1,end)
            
            return root
        if(preorder==None or len(preorder)==0 or len(inorder)==0):
            return None
       
        for i in range(0,len(inorder)):
            t=inorder[i]
            self.d[t]=i
        return helper(preorder,inorder,0,len(inorder)-1)
TC-O(N)
SC-O(H)