/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    boolean flag;
    public boolean isValidBST(TreeNode root) {
       flag = true;
       helper(root, null, null);
       return flag;
    }
    
    private void helper(TreeNode root, Integer min, Integer max) {
        if(root == null)  return;
        
        //
        if(min != null && root.val <= min) flag = false;
        if(max != null && root.val >= max) flag = false;
        //logic
        helper(root.left, min, root.val);
        System.out.println("root1 " + root.val + " min1 " + min + " max1 " + max);
        helper(root.right, root.val, max);
        System.out.println("root2 " + root.val + " min2 " + min + " max2 " + max);
    }
    
}
