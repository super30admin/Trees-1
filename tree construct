// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : YES
// Any problem you faced while coding this : NO

public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int index = 0;
        unordered_map<int, int> dict;
    
        for (int i = 0; i < inorder.size(); ++i) 
            dict[inorder[i]] = i;
        
        
        return  check(preorder, 0, preorder.size() - 1, index, dict);
    }
private: TreeNode *check(vector<int> &preorder, int start, int end, int &index, unordered_map<int, int> &dict) {
        if (start > end) return NULL;
    
        TreeNode *node = new TreeNode(preorder[index]);
        int i = dict[preorder[index++]];
        node -> left = check(preorder, start, i - 1, index, dict);
        node -> right = check(preorder, i + 1, end, index, dict);
        return node;
    }
};
