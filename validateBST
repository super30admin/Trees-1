/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
	//98. Validate Binary Search Tree
    //Time Complexity : O(n)
    //Space complexity :O(h) where h is the height of the tree
    
    TreeNode prev;
    public boolean isValidBST(TreeNode root) {
        
        if(root == null)
            return true;
        
       return  helper(root);
    }
    
    private boolean helper(TreeNode root){
        
        if(root == null)
            return true;
        
        if(helper(root.left)==false)
            return false;
        
        if(prev!=null && prev.val>=root.val)
            return false;
        prev = root;
        return helper(root.right);
    }
}