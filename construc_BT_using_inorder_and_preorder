/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        
        if(preorder.length==0) return null;
        TreeNode root = new TreeNode(preorder[0]);
        int index = -1;
        for(int i=0; i< inorder.length ; i++){
            if(inorder[i]== root.val){
                index = i;
                break;
            }
            
        }
        
        int[] preorderLeft = Arrays.copyOfRange(preorder,1, index+1);
        int[] preorderRight = Arrays.copyOfRange(preorder,index+1,preorder.length);
        int[] inorderLeft = Arrays.copyOfRange(inorder,0, index);
        int[] inorderRight = Arrays.copyOfRange(inorder,index+1, inorder.length);
        
        root.left= buildTree(preorderLeft, inorderLeft);
        root.right  = buildTree(preorderRight,inorderRight);
        
        return root;
        
        
        
        
        
        
    }
}
