class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:
        inorderIndexDict = {ch : i for i, ch in enumerate(inorder)}
        self.rootIndex = 0
        
        def solve(left, right):
            if left > right: return None
            
            root = TreeNode(preorder[self.rootIndex])
            self.rootIndex += 1
            
            i = inorderIndexDict[root.val]
            
            root.left = solve(left, i-1)
            root.right = solve(i+1, right)
            
            return root
        
        return solve(0, len(inorder)-1)
    
    
# Time Complexity: O(N)
# Space Complexity: O(1)
# Successfully implemented on Leetcode
