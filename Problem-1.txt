#Problem-1
#TC:O(2^N)
#SC:O(logN) height of tree


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    List<Integer> list = new ArrayList<>();
    public boolean isValidBST(TreeNode root) 
    {
        inorderTraversal(root);
        
        for(int i=0;i<list.size()-1;i++)
            if(list.get(i)>=list.get(i+1))
               return false;
        
        return true;
    }


public void inorderTraversal(TreeNode root)
{
    if(root==null)
        return;
    
    if(root.left!=null)
        inorderTraversal(root.left);
      list.add(root.val);
    if(root.right!=null)
        inorderTraversal(root.right);
 
}
}