105. Construct Binary Tree from Preorder and Inorder Traversal

//TC=O(n) SC=O(n) ---- using pointers
class Solution {
    int idx;
    HashMap <Integer,Integer>map;
    public TreeNode buildTree(int[] preorder, int[] inorder) {
    this.map=new HashMap<>();
    for(int i=0;i<inorder.length;i++){
        map.put(inorder[i],i);
    }
    return helper(preorder,0,preorder.length-1);

    }
    private TreeNode helper(int[] preorder,int start,int end){
        //base
        if(start>end){
            return null;
        }
        //logic
        int rootVal=preorder[idx];
        idx++;
        TreeNode root=new TreeNode(rootVal);
        int rootIdx=map.get(rootVal);
        root.left=helper(preorder,start,rootIdx-1);
        root.right=helper(preorder,rootIdx+1,end);
        return root;


    }
}

